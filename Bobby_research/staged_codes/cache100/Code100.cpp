

bssn::timer::t_rhs.start();
for (unsigned int k = 3; k < nz-3; k++) {
    for (unsigned int j = 3; j < ny-3; j++) {
        for (unsigned int i = 3; i < nx-3; i++) {
            double x = pmin[0] + i*hx;
            double y = pmin[1] + j*hy;
            double z = pmin[2] + k*hz;
            double r_coord = sqrt(x*x + y*y + z*z);
            double eta=ETA_CONST;
            if (r_coord >= ETA_R0) {
                eta *= pow( (ETA_R0/r_coord), ETA_DAMPING_EXP);
            }
            int pp = i + nx*(j + ny*k);
            double x0 = 0.33333333333333331;
            double x1 = -At3[pp];
            double x2 = pow(gt4[pp], 2);
            double x3 = pow(gt1[pp], 2);
            double x4 = pow(gt2[pp], 2);
            double x5 = gt0[pp]*gt5[pp];
            double x6 = gt3[pp]*x5;
            double x7 = gt2[pp]*gt4[pp];
            double x8 = 2*x7;
            double x9 = gt0[pp]*x2 - gt1[pp]*x8 + gt3[pp]*x4 + gt5[pp]*x3 - x6;
            double x10 = 1.0/x9;
            double x11 = gt0[pp]*gt4[pp];
            double x12 = gt1[pp]*gt2[pp];
            double x13 = x11 - x12;
            double x14 = gt1[pp]*gt5[pp];
            double x15 = x14 - x7;
            double x16 = -x4 + x5;
            double x17 = gt1[pp]*gt4[pp];
            double x18 = gt2[pp]*gt3[pp];
            double x19 = x17 - x18;
            double x20 = gt0[pp]*gt3[pp];
            double x21 = x20 - x3;
            double x22 = gt3[pp]*gt5[pp];
            double x23 = -x2 + x22;
            double x24 = grad_0_chi[pp]*x19 + grad_2_chi[pp]*x21;
            double x25 = 1.0/chi[pp];
            double x26 = 0.5*gt3[pp]*x25;
            double x27 = 0.5*x12;
            double x28 = 0.5*x11 - x27;
            double x29 = 0.5*grad_0_gt3[pp];
            double x30 = 1.0*grad_1_gt1[pp];
            double x31 = -x30;
            double x32 = x29 + x31;
            double x33 = 1.0*grad_1_gt4[pp];
            double x34 = 0.5*grad_2_gt3[pp];
            double x35 = x33 - x34;
            double x36 = grad_1_gt3[pp]*x28 + x19*x32 - x21*x35;
            double x37 = grad_0_chi[pp]*x23 + grad_2_chi[pp]*x19;
            double x38 = 0.5*x7;
            double x39 = 0.5*x14 - x38;
            double x40 = x19*x35;
            double x41 = grad_1_gt3[pp]*x39 + x23*x32 - x40;
            double x42 = -1.0*grad_1_chi[pp];
            double x43 = grad_0_chi[pp]*x15 - grad_1_chi[pp]*x16 + grad_2_chi[pp]*x13;
            double x44 = 1.0*x25;
            double x45 = 0.5*grad_1_gt3[pp];
            double x46 = x16*x45;
            double x47 = -x46;
            double x48 = x15*x32;
            double x49 = 1.0*x10;
            double x50 = 1.0*x10*x13*x35 + 1.0*x10*x47 - x48*x49;
            double x51 = grad_0_gt3[pp]*x16;
            double x52 = grad_0_gt4[pp] + grad_1_gt2[pp] - grad_2_gt1[pp];
            double x53 = grad_1_gt0[pp]*x15 + x13*x52 - x51;
            double x54 = grad_1_gt3[pp]*x53;
            double x55 = x13*x35;
            double x56 = x46 + x48 - x55;
            double x57 = grad_0_gt3[pp]*x56;
            double x58 = pow(x9, -2);
            double x59 = x15*x58;
            double x60 = 2.0*x59;
            double x61 = -grad_0_gt3[pp];
            double x62 = grad_0_gt3[pp]*x15;
            double x63 = -x62;
            double x64 = grad_1_gt0[pp]*x23 + x19*x52;
            double x65 = x63 + x64;
            double x66 = grad_1_gt0[pp]*x41;
            double x67 = grad_0_gt3[pp]*x13;
            double x68 = grad_1_gt0[pp]*x19;
            double x69 = x21*x52;
            double x70 = x67 - x68 - x69;
            double x71 = x36*x52;
            double x72 = grad_0_gt5[pp]*x19;
            double x73 = grad_2_gt0[pp]*x23;
            double x74 = grad_0_gt4[pp] - grad_1_gt2[pp] + grad_2_gt1[pp];
            double x75 = x15*x74 - x72 - x73;
            double x76 = grad_2_gt3[pp]*x15;
            double x77 = grad_1_gt5[pp]*x19;
            double x78 = -grad_0_gt4[pp] + grad_1_gt2[pp] + grad_2_gt1[pp];
            double x79 = -x23*x78 + x76 - x77;
            double x80 = grad_1_gt0[pp]*x23;
            double x81 = x19*x52;
            double x82 = x62 - x80 - x81;
            double x83 = 0.5*x17 - 0.5*x18;
            double x84 = grad_2_gt5[pp]*x83;
            double x85 = 0.5*grad_0_gt5[pp];
            double x86 = 1.0*grad_2_gt2[pp];
            double x87 = x85 - x86;
            double x88 = 0.5*grad_1_gt5[pp];
            double x89 = 1.0*grad_2_gt4[pp];
            double x90 = -x89;
            double x91 = x88 + x90;
            double x92 = -x15*x91 + x23*x87 - x84;
            double x93 = 0.5*grad_0_gt0[pp]*x23;
            double x94 = 1.0*grad_0_gt1[pp];
            double x95 = 0.5*grad_1_gt0[pp];
            double x96 = x94 - x95;
            double x97 = 1.0*grad_0_gt2[pp];
            double x98 = 0.5*grad_2_gt0[pp];
            double x99 = x97 - x98;
            double x100 = x19*x99;
            double x101 = -x100 + x15*x96 - x93;
            double x102 = 2.0*x58;
            double x103 = grad_1_gt5[pp]*x13;
            double x104 = grad_2_gt3[pp]*x16;
            double x105 = x103 - x104 + x15*x78;
            double x106 = 0.25*grad_1_gt3[pp]*x105;
            double x107 = grad_2_gt3[pp]*x56;
            double x108 = 4*x11 - 4*x12;
            double x109 = x108*x58;
            double x110 = 0.25*grad_0_gt3[pp];
            double x111 = -0.5*grad_1_gt1[pp] + x110;
            double x112 = x41*x74;
            double x113 = -0.25*grad_2_gt3[pp];
            double x114 = 0.5*grad_1_gt4[pp] + x113;
            double x115 = x19*x78;
            double x116 = grad_2_gt3[pp]*x13;
            double x117 = grad_1_gt5[pp]*x21;
            double x118 = -x116 + x117;
            double x119 = x115 + x118;
            double x120 = 2*x36*x91;
            double x121 = 4*x17 - 4*x18;
            double x122 = x67 - x68 - x69;
            double x123 = x19*x78;
            double x124 = x116 - x117 - x123;
            double x125 = x124*x52;
            double x126 = 0.25*x125;
            double x127 = x23*x78 + x77;
            double x128 = x127 - x76;
            double x129 = 0.25*grad_1_gt0[pp];
            double x130 = 0.5*grad_0_gt4[pp];
            double x131 = 0.5*grad_2_gt1[pp];
            double x132 = (-0.5)*grad_1_gt2[pp] + x130 + x131;
            double x133 = grad_1_gt0[pp]*x19 + x21*x52;
            double x134 = x133 - x67;
            double x135 = 0.25*x78;
            double x136 = 0.25*grad_1_gt3[pp]*x53;
            double x137 = 4*x14 - 4*x7;
            double x138 = x137*x58;
            double x139 = 2*x41*x96;
            double x140 = x36*x74;
            double x141 = -x129;
            double x142 = x141 + x94;
            double x143 = -4*x2 + 4*x22;
            double x144 = 0.75*grad_0_gt4[pp];
            double x145 = 0.25*grad_2_gt1[pp];
            double x146 = 0.25*grad_1_gt2[pp];
            double x147 = -x146;
            double x148 = x145 + x147;
            double x149 = x144 + x148;
            double x150 = -grad2_1_1_chi[pp];
            double x151 = x47 - x48 + x55;
            double x152 = 2.0*x25;
            double x153 = grad_2_gt0[pp]*x19;
            double x154 = grad_0_gt5[pp]*x21;
            double x155 = x13*x74 - x153 - x154;
            double x156 = 0.5*grad_2_gt5[pp]*x21;
            double x157 = x13*x91;
            double x158 = -x156 - x157 + x19*x87;
            double x159 = grad_0_gt0[pp]*x83;
            double x160 = x21*x99;
            double x161 = x13*x96 - x159 - x160;
            double x162 = grad_0_gt5[pp]*x13;
            double x163 = x16*x74;
            double x164 = grad_2_gt0[pp]*x15 + x162 - x163;
            double x165 = -x85 + x86;
            double x166 = grad_2_gt5[pp]*x28 + x15*x165 + x16*x91;
            double x167 = x16*x96;
            double x168 = grad_0_gt0[pp]*x39 + x13*x99 - x167;
            double x169 = x168*x23;
            double x170 = pow(grad_1_chi[pp], 2);
            double x171 = 3.0*x25;
            double x172 = -x171;
            double x173 = x16*(2*grad2_1_1_chi[pp] + x170*x172);
            double x174 = pow(grad_0_chi[pp], 2);
            double x175 = x23*(2*grad2_0_0_chi[pp] - 3.0*x174*x25);
            double x176 = pow(grad_2_chi[pp], 2);
            double x177 = x21*(2*grad2_2_2_chi[pp] - x171*x176);
            double x178 = 2*x14 - x8;
            double x179 = grad_0_chi[pp]*x171;
            double x180 = 2*grad2_0_1_chi[pp] - grad_1_chi[pp]*x179;
            double x181 = 2*x17 - 2*x18;
            double x182 = 2*grad2_0_2_chi[pp] - grad_2_chi[pp]*x179;
            double x183 = (2*grad2_1_2_chi[pp] + grad_1_chi[pp]*grad_2_chi[pp]*x172)*(2*x11 - 2*x12);
            double x184 = x151*x16;
            double x185 = x105*x13 + x15*x53 - 1.0*x164*x19 - x166*x21 - x169 - x184;
            double x186 = x158*x21;
            double x187 = x122*x15 + x124*x13 - 1.0*x155*x19 - x16*x36 - x161*x23 - x186;
            double x188 = x101*x23;
            double x189 = x13*x79 + x15*x82 - x16*x41 - x188 - 1.0*x19*x75 - x21*x92;
            double x190 = grad_1_gt3[pp]*x105;
            double x191 = x41*x78;
            double x192 = grad_1_gt5[pp]*x36;
            double x193 = 0.25*grad_1_gt5[pp];
            double x194 = 4*x20 - 4*x3;
            double x195 = 0.25*grad_0_gt4[pp];
            double x196 = 0.75*grad_2_gt1[pp];
            double x197 = x147 + x195 + x196;
            double x198 = -x29;
            double x199 = -4*x4 + 4*x5;
            double x200 = pow(chi[pp], -2);
            double x201 = 4.0*x10;
            double x202 = x13*x201;
            double x203 = x15*x201;
            double x204 = x105*x110;
            double x205 = x121*x58;
            double x206 = 0.25*grad_2_gt3[pp]*x53;
            double x207 = grad_2_gt3[pp]*x105;
            double x208 = 3.0*x58;
            double x209 = x208*x21;
            double x210 = x199*x58;
            double x211 = grad_0_gt3[pp]*x53;
            double x212 = x208*x23;
            double x213 = 2.0*grad2_0_0_gt3[pp]*x10*x23 - grad2_0_1_gt3[pp]*x203 + 1.0*grad2_0_2_gt3[pp]*x10*x121 + 2.0*grad2_1_1_gt3[pp]*x10*x16 - grad2_1_2_gt3[pp]*x202 + 2.0*grad2_2_2_gt3[pp]*x10*x21 + 4*grad_1_Gt0[pp]*gt1[pp] + 4*grad_1_Gt1[pp]*gt3[pp] + 4*grad_1_Gt2[pp]*gt4[pp] - x170*x200 - x205*(0.5*grad_2_gt3[pp]*x53 + x204) - x205*(x105*x29 + x206) - x207*x209 - x210*x36*(x33 + x34) - x211*x212;
            double x214 = -grad_0_chi[pp]*x23 + grad_1_chi[pp]*x15 - grad_2_chi[pp]*x19;
            double x215 = 1.0/(-gt0[pp]*x2 + 2*gt1[pp]*gt2[pp]*gt4[pp] - gt3[pp]*x4 - gt5[pp]*x3 + x6);
            double x216 = -x11 + x12;
            double x217 = grad_1_chi[pp]*x216 + x24;
            double x218 = grad_0_gt5[pp]*x155;
            double x219 = grad_1_gt5[pp]*x124;
            double x220 = x16*x208;
            double x221 = 6.0*x58;
            double x222 = 0.25*grad_2_gt0[pp];
            double x223 = -x222;
            double x224 = x143*x58;
            double x225 = -x145;
            double x226 = 0.75*grad_1_gt2[pp];
            double x227 = x194*x58;
            double x228 = 0.25*grad_0_gt5[pp];
            double x229 = x124*x228;
            double x230 = 0.25*grad_1_gt5[pp]*x155;
            double x231 = grad_2_gt3[pp]*x166;
            double x232 = 0.25*grad_2_gt3[pp]*x164;
            double x233 = 0.5*x52;
            double x234 = grad_2_gt5[pp]*x124;
            double x235 = grad_1_gt5[pp]*x158;
            double x236 = grad_0_gt5[pp]*x158;
            double x237 = x102*x19;
            double x238 = 0.25*grad_2_gt5[pp]*x124;
            double x239 = 0.25*grad_2_gt5[pp]*x155;
            double x240 = x222*x79;
            double x241 = x105*x74;
            double x242 = 0.25*x241;
            double x243 = x78*x92;
            double x244 = x75*x78;
            double x245 = 0.25*x244;
            double x246 = (-0.5)*grad_2_gt4[pp] + x193;
            double x247 = -x164*x246;
            double x248 = -x103 + x104 - x15*x78;
            double x249 = x246*x248;
            double x250 = -0.5*grad_2_gt2[pp] + x228;
            double x251 = -x250*x79;
            double x252 = -x15*x74 + x72 + x73;
            double x253 = x250*x252;
            double x254 = (-0.5)*gt0[pp]*gt4[pp] + x27;
            double x255 = -x14 + x7;
            double x256 = -x88 + x89;
            double x257 = 2.0*x10;
            double x258 = -grad_0_chi[pp]*x189*x257 - grad_1_chi[pp]*x185*x257 - grad_2_chi[pp]*x187*x257 - x173 - x175 - x177 + x178*x180 - x181*x182 + x183;
            double x259 = -grad_0_chi[pp]*x19 + grad_1_chi[pp]*x13 - grad_2_chi[pp]*x21;
            double x260 = grad_0_chi[pp]*x255 + grad_1_chi[pp]*x16 + grad_2_chi[pp]*x216;
            double x261 = grad_0_gt3[pp]*x151;
            double x262 = grad_2_gt3[pp]*x151;
            double x263 = -x111*x79;
            double x264 = x114*x124;
            double x265 = 0.25*grad_1_gt5[pp]*x122;
            double x266 = x78*x82;
            double x267 = 0.25*x266;
            double x268 = x129*x79;
            double x269 = x63 + x80 + x81;
            double x270 = x111*x269;
            double x271 = x114*x122;
            double x272 = (-0.5)*gt1[pp]*gt5[pp] + x38;
            double x273 = x198 + x30;
            double x274 = grad_1_chi[pp]*x255 + x37;
            double x275 = -x195;
            double x276 = 0.25*grad_0_gt3[pp]*x164;
            double x277 = x129*x75;
            double x278 = x222*x82;
            double x279 = x122*x228;
            double x280 = grad_0_gt3[pp]*x168;
            double x281 = x53*x74;
            double x282 = 0.25*x281;
            double x283 = x155*x52;
            double x284 = 0.25*x283;
            double x285 = grad_0_gt5[pp]*x161;
            double x286 = 0.25*grad_0_gt0[pp]*x82;
            double x287 = 0.25*grad_0_gt0[pp]*x75;
            double x288 = x161*x52;
            double x289 = 0.5*grad_0_gt1[pp] + x141;
            double x290 = x164*x289;
            double x291 = x289*x53;
            double x292 = 0.5*grad_0_gt2[pp] + x223;
            double x293 = x122*x292;
            double x294 = x155*x292;
            double x295 = -x227;
            double x296 = 0.25*grad_1_gt5[pp]*x105;
            double x297 = x132*x92 + x228*x79;
            double x298 = -x158*x91;
            double x299 = x289*x75;
            double x300 = x292*x82;
            double x301 = x299 + x300;
            double x302 = x52*x53;
            double x303 = 0.25*x302;
            double x304 = x105*x114;
            double x305 = 0.5*grad_1_gt3[pp]*x166;
            double x306 = 0.25*grad_2_gt3[pp]*x105 + x305;
            double x307 = -0.25*x23*x78 + 0.25*x76 - 0.25*x77;
            double x308 = x307*x78;
            double x309 = x29*x92 + x307*x52;
            double x310 = x148 + x195;
            double x311 = x310*x79 + x41*x85;
            double x312 = 0.5*grad_2_gt5[pp]*x36;
            double x313 = x246*(x118 + x123) + x312;
            double x314 = 0.25*grad_1_gt5[pp]*x53;
            double x315 = x166*x29;
            double x316 = x232 + x315;
            double x317 = 0.25*x52;
            double x318 = x105*x317;
            double x319 = x132*x158 + x229;
            double x320 = x292*x79 + x92*x96;
            double x321 = x310*x75;
            double x322 = 0.5*grad_1_gt0[pp]*x92;
            double x323 = x228*x82 + x322;
            double x324 = 0.5*grad_1_gt2[pp];
            double x325 = (-0.5)*grad_2_gt1[pp] + x130 + x324;
            double x326 = x158*x325;
            double x327 = -x155*x246;
            double x328 = 0.25*grad_2_gt5[pp]*x122;
            double x329 = x327 + x328;
            double x330 = x114*x53;
            double x331 = 0.25*grad_2_gt0[pp]*x15 + 0.25*x162 - 0.25*x163;
            double x332 = grad_1_gt3[pp]*x331;
            double x333 = x204 + x332;
            double x334 = x111*x252;
            double x335 = x289*x79 + x41*x99;
            double x336 = x151*x325;
            double x337 = x114*x155;
            double x338 = x36*x85;
            double x339 = x124*x310 + x338;
            double x340 = x151*x35;
            double x341 = x110*x79 + x325*x41;
            double x342 = 0.25*grad_2_gt3[pp]*x124;
            double x343 = grad_1_gt5[pp]*x122;
            double x344 = grad_2_gt3[pp]*x155 + x343;
            double x345 = x52*x82;
            double x346 = grad_1_gt0[pp]*x79;
            double x347 = grad_0_gt3[pp]*x75 + x346;
            double x348 = grad_0_gt5[pp]*x122;
            double x349 = x155*x74;
            double x350 = x348 + x349;
            double x351 = 1.0*x58;
            double x352 = x23*x351;
            double x353 = -x202;
            double x354 = -x203;
            double x355 = 2.0*grad2_0_0_gt4[pp]*x10*x23 + grad2_0_1_gt4[pp]*x354 + 1.0*grad2_0_2_gt4[pp]*x10*x121 + 2.0*grad2_1_1_gt4[pp]*x10*x16 + grad2_1_2_gt4[pp]*x353 + 2.0*grad2_2_2_gt4[pp]*x10*x21 + 2.0*grad_0_gt4[pp]*x189*x58 + 2.0*grad_1_Gt0[pp]*gt2[pp] + 2.0*grad_1_Gt1[pp]*gt4[pp] + 2.0*grad_1_Gt2[pp]*gt5[pp] - grad_1_chi[pp]*grad_2_chi[pp]*x200 + 2.0*grad_1_gt4[pp]*x185*x58 + 2.0*grad_2_Gt0[pp]*gt1[pp] + 2.0*grad_2_Gt1[pp]*gt3[pp] + 2.0*grad_2_Gt2[pp]*gt4[pp] + 2.0*grad_2_gt4[pp]*x187*x58 + 1.0*gt4[pp]*x10*x25*x258 - x152*(-grad2_1_2_chi[pp] + 0.5*grad_0_chi[pp]*x215*(grad_2_gt3[pp]*x255 + x127) + 0.5*grad_1_chi[pp]*x215*(grad_1_gt5[pp]*x216 + x104 + x255*x78) + 0.5*grad_2_chi[pp]*x215*(grad_2_gt3[pp]*x216 + x115 + x117));
            double x356 = -grad_1_chi[pp];
            double x357 = 2.0*grad_2_alpha[pp];
            double x358 = -grad_2_chi[pp];
            double x359 = 2.0*grad_1_alpha[pp];
            double x360 = -4*grad2_1_2_alpha[pp] + 1.0*grad_0_alpha[pp]*x10*(2.0*gt4[pp]*x214*x25 - 2.0*x23*x78 + 2.0*x76 - 2.0*x77) + x357*(1.0*grad_2_gt3[pp]*x10*x13 - x117*x49 - x123*x49 + x44*(1.0*gt4[pp]*x215*x217 + x356)) + x359*(1.0*grad_1_gt5[pp]*x10*x13 + 1.0*x10*x15*x78 - x104*x49 + x44*(1.0*gt4[pp]*x215*x260 + x358));
            double x361 = x228*x75;
            double x362 = (-0.5)*grad_0_gt4[pp] + x131 + x324;
            double x363 = 0.25*grad_1_gt5[pp]*x164 + x166*x362;
            double x364 = -x158*x87;
            double x365 = 0.25*grad_1_gt0[pp]*x164 + x168*x325;
            double x366 = x101*x99;
            double x367 = 0.25*grad_2_gt0[pp]*x155;
            double x368 = 0.5*x164*x35 - x166*x32;
            double x369 = x158*x362 + x230;
            double x370 = x317*x75 + x322;
            double x371 = x105*x78;
            double x372 = 0.25*x371;
            double x373 = -x124*x250;
            double x374 = x328 + x373;
            double x375 = x292*x75;
            double x376 = 0.5*grad_0_gt0[pp]*x92;
            double x377 = x222*x75 + x376;
            double x378 = x331*x74;
            double x379 = 0.5*grad_1_gt0[pp]*x166 + x331*x52;
            double x380 = x168*x88 + x331*x78;
            double x381 = 0.5*grad_2_gt5[pp]*x161;
            double x382 = x250*(-x13*x74 + x153 + x154) + x381;
            double x383 = 0.25*grad_0_gt0[pp]*x79;
            double x384 = x277 + x383;
            double x385 = x101*x325;
            double x386 = x105*x289;
            double x387 = -0.5*x164*x32 + x168*x35;
            double x388 = x124*x292;
            double x389 = 0.5*grad_1_gt5[pp]*x161;
            double x390 = x135*x155 + x389;
            double x391 = x111*x248;
            double x392 = x330 + x391;
            double x393 = 0.25*x345;
            double x394 = grad_2_gt0[pp]*x124;
            double x395 = grad_0_gt3[pp]*x164;
            double x396 = grad_1_gt0[pp]*x105;
            double x397 = x124*x78;
            double x398 = x16*x351;
            double x399 = -grad_0_chi[pp]*x200;
            double x400 = 2.0*grad2_0_0_gt2[pp]*x10*x23 + grad2_0_1_gt2[pp]*x354 + 1.0*grad2_0_2_gt2[pp]*x10*x121 + 2.0*grad2_1_1_gt2[pp]*x10*x16 + grad2_1_2_gt2[pp]*x353 + 2.0*grad2_2_2_gt2[pp]*x10*x21 + 2.0*grad_0_Gt0[pp]*gt2[pp] + 2.0*grad_0_Gt1[pp]*gt4[pp] + 2.0*grad_0_Gt2[pp]*gt5[pp] + 2.0*grad_0_gt2[pp]*x189*x58 + 2.0*grad_1_gt2[pp]*x185*x58 + 2.0*grad_2_Gt0[pp]*gt0[pp] + 2.0*grad_2_Gt1[pp]*gt1[pp] + 2.0*grad_2_Gt2[pp]*gt2[pp] + grad_2_chi[pp]*x399 + 2.0*grad_2_gt2[pp]*x187*x58 + 1.0*gt2[pp]*x10*x25*x258 - x152*(-grad2_0_2_chi[pp] + 0.5*grad_0_chi[pp]*x215*(grad_2_gt0[pp]*x23 + x255*x74 + x72) + 0.5*grad_1_chi[pp]*x215*(grad_0_gt5[pp]*x216 + grad_2_gt0[pp]*x255 + x16*x74) + 0.5*grad_2_chi[pp]*x215*(grad_2_gt0[pp]*x19 + x154 + x216*x74));
            double x401 = -grad_0_chi[pp];
            double x402 = 2.0*grad_0_alpha[pp];
            double x403 = (-4)*grad2_0_2_alpha[pp] + 2.0*grad_1_alpha[pp]*x10*(1.0*gt2[pp]*x25*x43 + x164) + x357*(1.0*x10*x13*x74 - x153*x49 - x154*x49 + x44*(1.0*gt2[pp]*x215*x217 + x401)) + x402*(1.0*x10*x15*x74 + x44*(1.0*gt2[pp]*x215*x274 + x358) - x49*x72 - x49*x73);
            double x404 = 0.25*x349;
            double x405 = 0.25*grad_1_gt5[pp]*x124;
            double x406 = x250*x269;
            double x407 = x132*x151;
            double x408 = 0.25*grad_2_gt3[pp]*x155 + x338;
            double x409 = x110*x75;
            double x410 = 0.5*grad_2_gt0[pp]*x41;
            double x411 = grad_0_gt5[pp]*x82;
            double x412 = grad_2_gt0[pp]*x79;
            double x413 = x412 + x74*x75;
            double x414 = x19*x351;
            double x415 = grad_1_gt5[pp]*x53;
            double x416 = grad_2_gt3[pp]*x164;
            double x417 = x241 + x416;
            double x418 = x281 + x395;
            double x419 = -x205;
            double x420 = -x246*x53;
            double x421 = x155*x228;
            double x422 = x277 + x278;
            double x423 = x101*x362 + x383;
            double x424 = x124*x222 + x389;
            double x425 = 0.25*x397;
            double x426 = x13*x58;
            double x427 = x168*x34;
            double x428 = x105*x129 + x427;
            double x429 = -x224;
            double x430 = x327 + x373;
            double x431 = x101*x96;
            double x432 = x122*x222 + x132*x161;
            double x433 = 0.25*grad_1_gt0[pp]*x53;
            double x434 = -0.5*x122*x91 - x36*x87;
            double x435 = x332 + x391;
            double x436 = x151*x362 + x206;
            double x437 = x268 + x410;
            double x438 = x310*x82;
            double x439 = x278 + x383;
            double x440 = x101*x132;
            double x441 = -0.5*x122*x87 - x161*x91;
            double x442 = x427 + 0.25*x53*x78;
            double x443 = 0.25*x67 - 0.25*x68 - 0.25*x69;
            double x444 = x443*x52;
            double x445 = 0.5*grad_2_gt0[pp]*x36 + x122*x310;
            double x446 = x289*x82;
            double x447 = 0.5*grad_0_gt0[pp]*x41;
            double x448 = x129*x82 + x447;
            double x449 = 0.5*grad_2_gt3[pp]*x161 + x443*x78;
            double x450 = x168*x45;
            double x451 = x111*(-grad_1_gt0[pp]*x15 - x13*x52 + x51) + x450;
            double x452 = x110*x82;
            double x453 = 0.25*grad_2_gt3[pp]*x122 + x36*x362;
            double x454 = -x151*x32;
            double x455 = x21*x351;
            double x456 = 2.0*grad2_0_0_gt1[pp]*x10*x23 + grad2_0_1_gt1[pp]*x354 + 1.0*grad2_0_2_gt1[pp]*x10*x121 + 2.0*grad2_1_1_gt1[pp]*x10*x16 + grad2_1_2_gt1[pp]*x353 + 2.0*grad2_2_2_gt1[pp]*x10*x21 + 2.0*grad_0_Gt0[pp]*gt1[pp] + 2.0*grad_0_Gt1[pp]*gt3[pp] + 2.0*grad_0_Gt2[pp]*gt4[pp] + 2.0*grad_0_gt1[pp]*x189*x58 + 2.0*grad_1_Gt0[pp]*gt0[pp] + 2.0*grad_1_Gt1[pp]*gt1[pp] + 2.0*grad_1_Gt2[pp]*gt2[pp] + grad_1_chi[pp]*x399 + 2.0*grad_1_gt1[pp]*x185*x58 + 2.0*grad_2_gt1[pp]*x187*x58 + 1.0*gt1[pp]*x10*x25*x258 - x152*(-grad2_0_1_chi[pp] + 0.5*grad_0_chi[pp]*x215*(grad_0_gt3[pp]*x255 + x64) + 0.5*grad_1_chi[pp]*x215*(grad_1_gt0[pp]*x255 + x216*x52 + x51) + 0.5*grad_2_chi[pp]*x215*(grad_0_gt3[pp]*x216 + x133));
            double x457 = -4*grad2_0_1_alpha[pp] + 1.0*grad_2_alpha[pp]*x10*(2.0*gt1[pp]*x25*x259 + 2.0*x67 - 2.0*x68 - 2.0*x69) + x359*(1.0*grad_1_gt0[pp]*x10*x15 + 1.0*x10*x13*x52 + x44*(1.0*gt1[pp]*x215*x260 + x401) - x49*x51) + x402*(1.0*grad_0_gt3[pp]*x10*x15 + x44*(1.0*gt1[pp]*x215*x274 + x356) - x49*x80 - x49*x81);
            double x458 = 0.25*grad_0_gt3[pp]*x53;
            _3748[pp] = 2*At1[pp]*grad_1_beta0[pp] + 4.0*At3[pp]*grad_1_beta1[pp]*x0 - 0.66666666666666663*At3[pp]*grad_2_beta2[pp] + 2*At4[pp]*grad_1_beta2[pp] - alpha[pp]*(2.0*At1[pp]*x10*(-At1[pp]*x23 + At3[pp]*x15 - At4[pp]*x19) + 2.0*At3[pp]*x10*(At1[pp]*x15 + At4[pp]*x13 + x1*x16) + 2.0*At4[pp]*x10*(-At1[pp]*x19 + At3[pp]*x13 - At4[pp]*x21) + K[pp]*x1) + 0.083333333333333329*chi[pp]*(3*alpha[pp]*(-grad_0_gt3[pp]*x102*(x101*x23 - 1.0*x13*x79 - 1.0*x15*x82 + x16*x41 + x19*x75 + x21*x92) - grad_1_gt3[pp]*x102*(-1.0*x105*x13 - 1.0*x15*x53 + x151*x16 + x164*x19 + x166*x21 + x169) + 6.0*grad_1_gt3[pp]*x16*x56*x58 - grad_2_gt3[pp]*x102*(-1.0*x122*x15 - 1.0*x124*x13 + x155*x19 + x158*x21 + x16*x36 + x161*x23) - gt3[pp]*x10*x44*(2.0*grad_0_chi[pp]*x10*x189 + 2.0*grad_1_chi[pp]*x10*x185 + 2.0*grad_2_chi[pp]*x10*x187 + x173 + x175 + x177 - x178*x180 + x181*x182 - x183) + x109*(x106 - 1.0*x107) - x109*(x111*x79 - 1.0*x112) - x109*(x114*x119 + x120) + x121*x58*(0.25*grad_1_gt5[pp]*x134 + x119*x132) + x121*x58*(x122*x91 - x126) + x121*x58*(x128*x129 + x132*x65) + x121*x58*(x135*x65 + x96*(1.0*x23*x78 - 1.0*x76 + 1.0*x77)) + x124*x194*x58*(x193 + x90) + x128*x194*x197*x58 + 2.0*x13*x58*(-x107 + x190) + 2.0*x13*x58*(-grad_2_gt3[pp]*x119 + x192) + 2.0*x13*x58*(x128*x61 + x191) + x134*x143*x149*x58 + x137*x58*(x111*x65 + x139) + x137*x58*(x114*x70 + x140) + x138*(x136 - 1.0*x57) + x142*x143*x58*x65 + 2.0*x15*x58*(grad_2_gt3[pp]*x70 + x71) - x152*(1.0*grad_0_chi[pp]*x10*x41 + 1.0*grad_1_chi[pp]*x10*x151 + 1.0*grad_2_chi[pp]*x10*x36 + x150) + x199*x41*x58*(x198 + x31) + x213 + x60*(x54 - x57) + x60*(x61*x65 + x66)) - 12*grad2_1_1_alpha[pp] + 12.0*grad_0_alpha[pp]*x10*(-x26*(-grad_1_chi[pp]*x15 + x37) + x41) + 12*grad_1_alpha[pp]*(x44*(0.5*gt3[pp]*x10*x43 + x42) + x50) + 12.0*grad_2_alpha[pp]*x10*(-x26*(-grad_1_chi[pp]*x13 + x24) + x36) + 1.0*gt3[pp]*x10*(-x13*(alpha[pp]*(x109*(x304 + x306) + x109*(x308 + x309) + x109*(x151*x88 + x306) + x109*(x158*x35 + x313) + x109*(x273*x92 + x311) + 2.0*x13*x58*(grad_2_gt3[pp]*x158 + x219) + x138*(x330 + x333) + x138*(x333 + x336) + x138*(x334 + x335) + x138*(x337 + x339) - x205*(x230 + x319) - x205*(x245 + x320) - x205*(x314 + x316) - x205*(x316 + x318) - x205*(x321 + x323) - x205*(x326 + x329) - x210*(x263 + x341) - x210*(0.5*grad_1_gt3[pp]*x105 + x340) - x210*(x264 + x342 + x36*x88) - x224*(x277 + x301) - x224*(0.5*grad_0_gt3[pp]*x164 + x303) - x227*(0.5*x243 + x297) - x227*(x158*x88 + x238 + x298) + x295*(1.0*x231 + x296) - x352*(x283 + x350) + x355 + x59*(x125 + x344) + x59*(x345 + x347)) + x360) - x13*(alpha[pp]*(x109*(x308 + x311) + x109*(x309 - x41*x87) + x109*(x313 + x405) + x109*(x151*x256 + x304 + x305) + x109*(x158*x34 + x312 + x405) + 2.0*x13*x58*(grad_1_gt5[pp]*x151 + x207) + x138*(x265 + x339) + x138*(x265 + x408) + x138*(x267 + x335) + x138*(x204 + x206 + x336) + x138*(x330 + x332 + x407) + x138*(x393 + x409 + x410) - x205*(x229 + x329) - x205*(x319 + x328) - x205*(x320 + x406) - x210*(0.5*x191 + x341) - x210*(1.0*x192 + x342) - x210*(x106 + x151*x34 + x340) - x224*(x278 + x301) - x224*(x122*x85 + x404) - x227*(0.5*x234 + x298) + x295*(x251 + x297) + x295*(0.5*grad_2_gt3[pp]*x166 + x249 + x296) - x352*(x302 + x418) + x355 - x414*(x411 + x413) - x414*(x415 + x417) + x419*(x315 + x318 + x420)) + x360) - x15*(alpha[pp]*(x109*(x206 + x435) + x109*(x332 + x436) + x109*(x337 + x434) + x109*(x334 + x410 + x438) + x138*(x444 + x449) + x138*(x451 + x458) + x138*(x161*x35 + x445) + x138*(0.5*grad_1_gt0[pp]*x151 + x450 + x458) + x138*(x101*x273 + x446 + x447) + 2.0*x15*x58*(grad_0_gt3[pp]*x101 + grad_1_gt0[pp]*x82) - x205*(x284 + x441) - x205*(x299 + x423) - x205*(x404 + x424) - x205*(x422 + x440) - x210*(x271 + x453) - x210*(0.5*grad_1_gt3[pp]*x53 + x454) - x210*(0.5*grad_1_gt0[pp]*x41 + x270 + x452) - x224*(0.5*x288 + x432) - x224*(0.5*grad_1_gt0[pp]*x101 + x286 + x431) + x295*(x230 + x430) + x295*(0.5*grad_2_gt3[pp]*x164 + x372) + x419*(x276 + x428) + x419*(x276 + x442) + x426*(x266 + x347) + x426*(x344 + x397) + x429*(1.0*x280 + x433) - x455*(x244 + x413) + x456) + x457) + x16*(alpha[pp]*(2.0*grad_0_gt3[pp]*x189*x58 - grad_1_gt3[pp]*x184*x221 + 2.0*grad_1_gt3[pp]*x185*x58 + 2.0*grad_2_gt3[pp]*x187*x58 + 1.0*gt3[pp]*x10*x25*x258 + x108*x58*(x112 + x263) + x108*x58*(-x120 + x264) + x109*(x106 + 1.0*x262) - x122*x149*x224 - x124*x227*(-x193 + x89) + 2.0*x13*x58*(x190 + x262) + 2.0*x13*x58*(grad_0_gt3[pp]*x79 + x191) + 2.0*x13*x58*(grad_2_gt3[pp]*x124 + x192) + x137*x58*(x139 + x270) + x137*x58*(x140 + x271) + x138*(x136 + 1.0*x261) - x142*x224*x82 + 2.0*x15*x58*(grad_0_gt3[pp]*x82 + x66) - x152*(1.0*grad_0_chi[pp]*x215*(grad_1_gt3[pp]*x272 + x23*x273 + x40) + 1.0*grad_1_chi[pp]*x215*(x216*x35 + x255*x273 + x46) + 1.0*grad_2_chi[pp]*x215*(grad_1_gt3[pp]*x254 + x19*x273 + x21*x35) + x150) - x197*x227*x79 - x205*(x267 + x79*x96) - x205*(-1.0*x122*x91 + x126) - x205*(x124*x132 + x265) - x205*(x132*x82 + x268) - x210*x41*(x29 + x30) + x213 + x60*(x261 + x54) + x60*(grad_2_gt3[pp]*x122 + x71)) - 4*grad2_1_1_alpha[pp] + 4.0*grad_0_alpha[pp]*x10*(0.5*gt3[pp]*x214*x25 + x41) + 4*grad_1_alpha[pp]*(x44*(0.5*gt3[pp]*x215*x260 + x42) + x50) + 4.0*grad_2_alpha[pp]*x10*(0.5*gt3[pp]*x25*x259 + x36)) + x19*(alpha[pp]*(x109*(x229 + x369) + x109*(x240 + x323) + x109*(x240 + x370) + x109*(x242 + x368) + x109*(x326 + x374) + x109*(x314 + x315 + x372) + x138*(x300 + x384) + x138*(x384 + x385) + x138*(x386 + x387) + x138*(x388 + x390) - x205*(x375 + x377) - x205*(x378 + x379) - x205*(x101*x85 + x377) - x205*(x158*x99 + x382) - x205*(x166*x96 + x380) - x210*(x204 + x392) - x210*(0.5*grad_1_gt0[pp]*x79 + x393) - x224*(x290 + x365) - x224*(0.5*grad_0_gt0[pp]*x75 + x366) - x224*(x161*x85 + x294 + x367) - x227*(x132*x166 + x363) - x227*(x158*x85 + x239 + x364) - x237*(grad_2_gt0[pp]*x158 + x218) + x295*(1.0*grad_2_gt0[pp]*x92 + x361) - x398*(x125 + x343 + x397) + x400 + x59*(x283 + x348 + x394) + x59*(x302 + x395 + x396)) + x403) + x19*(alpha[pp]*(x109*(x230 + x374) + x109*(x328 + x369) + x109*(x368 + x420) + x109*(x370 + x406) + x138*(x279 + x390) + x138*(x279 + x424) + x138*(x282 + x387) + x138*(x300 + x423) + x138*(x303 + x428) + x138*(x385 + x422) - x205*(x382 + x421) - x205*(0.5*grad_2_gt0[pp]*x158 + x381 + x421) - x205*(x101*x165 + x375 + x376) - x210*(x206 + x392) - x210*(0.5*grad_1_gt5[pp]*x122 + x425) - x224*(1.0*x285 + x367) - x224*(0.5*grad_2_gt0[pp]*x101 + x287 + x366) - x227*(0.5*grad_2_gt0[pp]*x92 + x253 + x361) - x237*(grad_0_gt5[pp]*x101 + grad_2_gt0[pp]*x75) + x295*(x247 + x363) + x295*(0.5*grad_2_gt5[pp]*x155 + x364) - x398*(x266 + x345 + x346) + x400 + x419*(x378 + x380) + x419*(x168*x256 + x379) + x426*(x244 + x411 + x412) + x426*(x371 + x415 + x416) + x429*(x132*x168 + x365)) + x403) + x21*(alpha[pp]*(2.0*grad2_0_0_gt5[pp]*x10*x23 - grad2_0_1_gt5[pp]*x203 + 1.0*grad2_0_2_gt5[pp]*x10*x121 + 2.0*grad2_1_1_gt5[pp]*x10*x16 - grad2_1_2_gt5[pp]*x202 + 2.0*grad2_2_2_gt5[pp]*x10*x21 + 2.0*grad_0_gt5[pp]*x189*x58 + 2.0*grad_1_gt5[pp]*x185*x58 + 4*grad_2_Gt0[pp]*gt2[pp] + 4*grad_2_Gt1[pp]*gt4[pp] + 4*grad_2_Gt2[pp]*gt5[pp] - grad_2_gt5[pp]*x186*x221 + 2.0*grad_2_gt5[pp]*x187*x58 + 1.0*gt5[pp]*x10*x25*x258 - x105*x210*(x113 + x33) + x108*x58*(x251 + x52*x92) + x108*x58*(2*x166*x35 + x249) + x109*(1.0*x235 + x238) + 2.0*x13*x58*(x234 + x235) + 2.0*x13*x58*(grad_0_gt5[pp]*x79 + x243) + 2.0*x13*x58*(grad_1_gt5[pp]*x105 + x231) + x137*x58*(x245 + x79*x99) + x137*x58*(x164*x35 + x242) + x138*(0.5*grad_1_gt5[pp]*x155 + x229) + x138*(x105*x233 + x232) + x138*(x124*x85 + x230) + x138*(x233*x75 + x240) - x152*(-grad2_2_2_chi[pp] + 1.0*grad_0_chi[pp]*x215*(x165*x23 + x255*x256 + x84) + 1.0*grad_1_chi[pp]*x215*(grad_2_gt5[pp]*x254 + x16*x256 + x165*x255) + 1.0*grad_2_chi[pp]*x215*(x156 + x165*x19 + x216*x256)) - x164*x224*(x144 + x146 + x225) - x166*x227*(x88 + x89) - x176*x200 - x205*(1.0*x236 + x239) - x205*(x253 + x92*(2.0*grad_0_gt2[pp] - 1.0*grad_2_gt0[pp])) - x205*(x166*x52 + x247) - x210*x79*(x195 + x225 + x226) - x212*x218 - x219*x220 - x224*x75*(x223 + x97) - x227*x92*(x85 + x86) - x237*(grad_0_gt5[pp]*x75 + grad_2_gt0[pp]*x92) - x237*(grad_1_gt5[pp]*x164 + x166*x74) - x237*(grad_2_gt5[pp]*x155 + x236)) + (-4)*grad2_2_2_alpha[pp] + 4.0*grad_0_alpha[pp]*x10*(0.5*gt5[pp]*x214*x25 + x92) + 4.0*grad_1_alpha[pp]*x10*(0.5*gt5[pp]*x25*x43 + x166) + 4*grad_2_alpha[pp]*(-x10*x156 + 1.0*x10*x19*x87 - x157*x49 + x44*(-1.0*grad_2_chi[pp] + 0.5*gt5[pp]*x215*x217))) + x23*(alpha[pp]*(2.0*grad2_0_0_gt0[pp]*x10*x23 - grad2_0_1_gt0[pp]*x203 + 1.0*grad2_0_2_gt0[pp]*x10*x121 + 2.0*grad2_1_1_gt0[pp]*x10*x16 - grad2_1_2_gt0[pp]*x202 + 2.0*grad2_2_2_gt0[pp]*x10*x21 + 4*grad_0_Gt0[pp]*gt0[pp] + 4*grad_0_Gt1[pp]*gt1[pp] + 4*grad_0_Gt2[pp]*gt2[pp] - grad_0_gt0[pp]*x188*x221 + 2.0*grad_0_gt0[pp]*x189*x58 + 2.0*grad_1_gt0[pp]*x185*x58 - grad_1_gt0[pp]*x220*x82 + 2.0*grad_2_gt0[pp]*x187*x58 - grad_2_gt0[pp]*x209*x75 + 1.0*gt0[pp]*x10*x25*x258 + x109*(x276 + 0.5*x53*x78) + x109*(0.5*grad_1_gt0[pp]*x75 + x278) + x109*(0.5*grad_2_gt0[pp]*x82 + x277) + x109*(-1.0*x122*x87 + x284) + x109*(0.5*x155*x78 + x279) + x109*(-1.0*x164*x32 + x282) - x122*x210*(x145 + x226 + x275) + x137*x58*(x161*x78 + x293) + x137*x58*(-2*x168*x32 + x291) + x138*(1.0*grad_1_gt0[pp]*x101 + x286) - x152*(-grad2_0_0_chi[pp] + 1.0*grad_0_chi[pp]*x215*(0.5*grad_0_gt0[pp]*x23 + x19*x99 + x255*x96) + 1.0*grad_1_chi[pp]*x215*(grad_0_gt0[pp]*x272 + x167 + x216*x99) + 1.0*grad_2_chi[pp]*x215*(x159 + x160 + x216*x96)) - x155*x227*(-x228 + x86) - x161*x224*(x97 + x98) - x164*x227*(x146 + x196 + x275) - x168*x224*(x94 + x95) - x174*x200 - x205*(1.0*grad_2_gt0[pp]*x101 + x287) - x205*(x161*(-grad_0_gt5[pp] + 2.0*grad_2_gt2[pp]) + x294) - x205*(x168*x78 + x290) - x210*x53*(-x110 + x30) - x237*(grad_0_gt0[pp]*x75 + grad_2_gt0[pp]*x101) - x237*(grad_1_gt0[pp]*x164 + x168*x74) - x237*(grad_2_gt0[pp]*x155 + x285) + x60*(grad_0_gt0[pp]*x82 + grad_1_gt0[pp]*x101) + x60*(grad_1_gt0[pp]*x53 + x280) + x60*(grad_2_gt0[pp]*x122 + x288)) - 4*grad2_0_0_alpha[pp] + 4*grad_0_alpha[pp]*(1.0*x10*x15*x96 - x10*x93 - x100*x49 + x44*(-1.0*grad_0_chi[pp] + 0.5*gt0[pp]*x215*x274)) + 4.0*grad_1_alpha[pp]*x10*(0.5*gt0[pp]*x25*x43 + x168) + 4.0*grad_2_alpha[pp]*x10*(0.5*gt0[pp]*x25*x259 + x161)) + x255*(alpha[pp]*(x109*(x126 + x434) + x109*(x204 + x436) + x109*(x407 + x435) + x109*(x408 + x425) + x109*(x409 + x437) + x109*(x437 + x438) + x138*(x444 + x445) + x138*(x446 + x448) + x138*(x101*x29 + x448) + x138*(x151*x96 + x451) + x138*(x36*x99 + x449) - x205*(x299 + x439) - x205*(x386 + x442) - x205*(x388 + x441) - x205*(x439 + x440) - x210*(x453 + 0.5*x71) - x210*(1.0*grad_1_gt0[pp]*x41 + x452) - x210*(x136 + x151*x29 + x454) - x224*(x293 + x432) - x224*(0.5*grad_0_gt0[pp]*x82 + x431) - x224*(x168*x29 + x291 + x433) - x227*(0.5*grad_2_gt0[pp]*x79 + x321) + x295*(x229 + x430) - x414*(x350 + x394) - x414*(x396 + x418) - x455*(x371 + x417) + x456 + x60*(grad_1_gt0[pp]*x151 + x211)) + x457))) + 2.0*grad_0_beta0[pp]*x0*x1;
        }
    }
}
bssn::timer::t_rhs.stop();