Notes for Research Meetings

Meeting: 5/29/2019
    - When creating the subtrees should a memoization approach be considered?
    - Is there a better way to handle the matching? Currently doing an n^2 operation for each group of nodes based on the number of leaf dependecies.

subtree results using current greedy strategy 
    - The strategy would pick the first node that has the same number of leaf dependecies as the target
autogenerated code: 990 subtrees

cache size numSubtrees
15       numSubtees: 1219
20       numSubtees: 897
25       numSubtees: 581
30       numSubtees: 395
35       numSubtees: 204
40       numSubtees: 140
45       numSubtees: 105
50       numSubtees: 74
55       numSubtees: 62
60       numSubtees: 46
65       numSubtees: 40
70       numSubtees: 33
75       numSubtees: 28
80       numSubtees: 19
85       numSubtees: 23
90       numSubtees: 21
95       numSubtees: 21

example of bad case:

    a   b   c   d
     \  |   |  /
      big node
      /    \
      5     4


      a
      |
    big_node
    /  \
    5   4

       b
       |
    big_node
    /  \
    5   4


Talk About Results:

    Staging is extremely accurate
    Timing is not as good as I though and need to discuss why
        Could be sum computational overlap