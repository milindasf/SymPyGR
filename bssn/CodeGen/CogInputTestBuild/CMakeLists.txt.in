cmake_minimum_required(VERSION 2.8)
project(NLSM)


##[[[cog
##import sys
####TODO: reorganize things so this isn't necessary
##sys.path.append("/mnt/c/Users/ljmoy/OneDrive/Documents/GitHub/SymPyGR/bssn/CodeGen/")
##from projectPaths import dendroPath
##from nlsmParams import namespace
##cog.outl("set(DENDRO_PATH ${{CMAKE_SOURCE_DIR}}/{0})".format(dendroPath))
##cog.outl("set(APP_NAME {0})".format(namespace))
##]]]
##[[[end]]]

# options for nlsm
option(NLSM_NONLINEAR "enable nonlinear version" OFF)
option(NLSM_COMPARE_WITH_ANALYTICAL_SOL "compare with the analytical sol. of the linear wave equation" OFF)

if(NLSM_COMPARE_WITH_ANALYTICAL_SOL)
    set(NLSM_NONLINEAR OFF)
    add_definitions(-DNLSM_COMPARE_WITH_ANALYTICAL_SOL)
endif()

if(NLSM_NONLINEAR)
    add_definitions(-DNLSM_NONLINEAR)
endif()

find_package(OpenMP REQUIRED)
find_package(MPI REQUIRED)

# For now we just make it compulsory to have LAPACK installed.
#Later we will make it possible if LAPACK is not present to automaticall install before compiling dendro5
if(OPENMP_FOUND)
    set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    set (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
endif()


if(MPI_COMPILE_FLAGS)
    set(COMPILE_FLAGS "${COMPILE_FLAGS} ${MPI_COMPILE_FLAGS}")
endif()

if(MPI_LINK_FLAGS)
    set(LINK_FLAGS "${LINK_FLAGS} ${MPI_LINK_FLAGS}")
endif()

set(DENDRO_INCLUDE_FILES
        ${DENDRO_PATH}/include/point.h
        ${DENDRO_PATH}/include/pointT.h
        ${DENDRO_PATH}/include/seqUtils.h
        ${DENDRO_PATH}/include/seqUtils.tcc
        ${DENDRO_PATH}/include/ompUtils.h
        ${DENDRO_PATH}/include/ompUtils.tcc
        ${DENDRO_PATH}/include/dendro.h
        ${DENDRO_PATH}/include/binUtils.h
        ${DENDRO_PATH}/include/hcurvedata.h
        ${DENDRO_PATH}/include/genPts_par.h
        ${DENDRO_PATH}/include/TreeNode.h
        ${DENDRO_PATH}/include/key.h
        ${DENDRO_PATH}/include/skey.h
        ${DENDRO_PATH}/include/node.h
        ${DENDRO_PATH}/include/treenode2vtk.h
        ${DENDRO_PATH}/include/parUtils.h
        ${DENDRO_PATH}/include/parUtils.tcc
        ${DENDRO_PATH}/include/mesh.h
        ${DENDRO_PATH}/include/mesh.tcc
        ${DENDRO_PATH}/include/meshE2NUtils.tcc
        ${DENDRO_PATH}/include/dendro.h
        ${DENDRO_PATH}/include/colors.h
        ${DENDRO_PATH}/include/dtypes.h
        ${DENDRO_PATH}/include/sfcSort.h
        ${DENDRO_PATH}/include/sfcSearch.h
        ${DENDRO_PATH}/include/test/testUtils.h
        ${DENDRO_PATH}/include/test/testUtils.tcc
        ${DENDRO_PATH}/include/test/meshTestUtils.h
        ${DENDRO_PATH}/include/octUtils.h
        ${DENDRO_PATH}/include/dendroIO.h
        ${DENDRO_PATH}/include/mathUtils.h
        ${DENDRO_PATH}/include/mathUtils.tcc
        ${DENDRO_PATH}/include/stencil.h
        ${DENDRO_PATH}/include/dollar.hpp
        ${DENDRO_PATH}/include/block.h
        ${DENDRO_PATH}/include/sc_flops.h
        ${DENDRO_PATH}/include/wavelet.h
        ${DENDRO_PATH}/include/profiler.h
        ${DENDRO_PATH}/include/dendroProfileParams.h
        ${DENDRO_PATH}/include/daUtils.h
        ${DENDRO_PATH}/include/daUtils.tcc
        ${DENDRO_PATH}/include/cuda/block_cu.h
        ${DENDRO_PATH}/include/oda.h
        ${DENDRO_PATH}/include/oda.tcc
        ${DENDRO_PATH}/include/odaUtils.h
        ${DENDRO_PATH}/include/asyncExchangeContex.h
        ${DENDRO_PATH}/include/matRecord.h
        ${DENDRO_PATH}/include/nufft.h
        ${DENDRO_PATH}/include/sub_oda.h
        ${DENDRO_PATH}/include/sub_oda.tcc
        )

set(DENDRO_SOURCE_FILES
        ${DENDRO_PATH}/src/point.cpp
        ${DENDRO_PATH}/src/binUtils.cpp
        ${DENDRO_PATH}/src/hcurvedata.cpp
        ${DENDRO_PATH}/src/genPts_par.cpp
        ${DENDRO_PATH}/src/TreeNode.cpp
        ${DENDRO_PATH}/src/treenode2vtk.cpp
        ${DENDRO_PATH}/src/parUtils.cpp
        ${DENDRO_PATH}/src/mesh.cpp
        ${DENDRO_PATH}/src/octUtils.cpp
        ${DENDRO_PATH}/src/dendroIO.cpp
        ${DENDRO_PATH}/src/block.cpp
        ${DENDRO_PATH}/src/sc_flops.cpp
        ${DENDRO_PATH}/src/profiler.cpp
        ${DENDRO_PATH}/src/dendroProfileParams.cpp
        ${DENDRO_PATH}/src/oda.cpp
        ${DENDRO_PATH}/src/odaUtils.cpp
        ${DENDRO_PATH}/src/sub_oda.cpp
        )

set(FEM_INC 
		${DENDRO_PATH}/FEM/include/basis.h
        ${DENDRO_PATH}/FEM/include/lapac.h
        ${DENDRO_PATH}/FEM/include/tensor.h
        ${DENDRO_PATH}/FEM/include/matvec.h
        ${DENDRO_PATH}/FEM/include/workspace.h
        ${DENDRO_PATH}/FEM/include/operators.h
        ${DENDRO_PATH}/FEM/include/feMat.h
        ${DENDRO_PATH}/FEM/include/feMatrix.h
        ${DENDRO_PATH}/FEM/include/feVec.h
        ${DENDRO_PATH}/FEM/include/feVector.h
        )

set(FEM_SRC 
		${DENDRO_PATH}/FEM/examples/src/laplace.cpp
        ${DENDRO_PATH}/FEM/src/basis.cpp
        ${DENDRO_PATH}/FEM/src/refel.cpp
        ${DENDRO_PATH}/FEM/src/tensor.cpp
        ${DENDRO_PATH}/FEM/src/workspace.cpp
        )

set(LINALG_INC
        ${DENDRO_PATH}/LinAlg/include/cg.h
        )

set(ODE_INC 
			${DENDRO_PATH}/ODE/include/fdCoefficient.h
            ${DENDRO_PATH}/ODE/include/rk.h
            ${DENDRO_PATH}/ODE/include/rkMaxwell.h
            ${DENDRO_PATH}/ODE/include/rkTransport.h
            ${DENDRO_PATH}/ODE/include/rkTransportUtils.h
        )

set(ODE_SRC 
			${DENDRO_PATH}/ODE/src/rk.cpp
            ${DENDRO_PATH}/ODE/src/rkMaxwell.cpp
            ${DENDRO_PATH}/ODE/src/rkTransport.cpp
        )


set(IO_INC 
			${DENDRO_PATH}/IO/vtk/include/oct2vtk.h
			${DENDRO_PATH}/IO/vtk/include/json.hpp
			${DENDRO_PATH}/IO/vtk/include/checkPoint.h
			${DENDRO_PATH}/IO/vtk/include/cencode.h
			${DENDRO_PATH}/IO/include/rawIO.h)

set(IO_SRC 
			${DENDRO_PATH}/IO/vtk/src/oct2vtk.cpp
			${DENDRO_PATH}/IO/vtk/src/checkPoint.cpp )


set(ZLIB_INC ${DENDRO_PATH}/IO/zlib/inc/crc32.h
        ${DENDRO_PATH}/IO/zlib/inc/deflate.h
        ${DENDRO_PATH}/IO/zlib/inc/gzguts.h
        ${DENDRO_PATH}/IO/zlib/inc/inffast.h
        ${DENDRO_PATH}/IO/zlib/inc/inffixed.h
        ${DENDRO_PATH}/IO/zlib/inc/inflate.h
        ${DENDRO_PATH}/IO/zlib/inc/inftrees.h
        ${DENDRO_PATH}/IO/zlib/inc/trees.h
        ${DENDRO_PATH}/IO/zlib/inc/zlib.h
        ${DENDRO_PATH}/IO/zlib/inc/zconf.h
        ${DENDRO_PATH}/IO/zlib/inc/zutil.h
        )


set(ZLIB_SRC
        ${DENDRO_PATH}/IO/zlib/src/adler32.c
        ${DENDRO_PATH}/IO/zlib/src/compress.c
        ${DENDRO_PATH}/IO/zlib/src/crc32.c
        ${DENDRO_PATH}/IO/zlib/src/deflate.c
        ${DENDRO_PATH}/IO/zlib/src/gzclose.c
        ${DENDRO_PATH}/IO/zlib/src/gzlib.c
        ${DENDRO_PATH}/IO/zlib/src/gzread.c
        ${DENDRO_PATH}/IO/zlib/src/gzwrite.c
        ${DENDRO_PATH}/IO/zlib/src/infback.c
        ${DENDRO_PATH}/IO/zlib/src/inffast.c
        ${DENDRO_PATH}/IO/zlib/src/inflate.c
        ${DENDRO_PATH}/IO/zlib/src/inftrees.c
        ${DENDRO_PATH}/IO/zlib/src/trees.c
        ${DENDRO_PATH}/IO/zlib/src/uncompr.c
        ${DENDRO_PATH}/IO/zlib/src/zutil.c
        )

add_library(dendro5 ${DENDRO_INCLUDE_FILES} ${DENDRO_SOURCE_FILES} ${LINALG_INC} ${FEM_INC} ${FEM_SRC} ${ODE_INC} ${ODE_SRC} ${IO_INC} ${IO_SRC} ${ZLIB_INC} ${ZLIB_SRC} )
target_include_directories(dendro5 PUBLIC ${DENDRO_PATH}/include)
target_include_directories(dendro5 PUBLIC ${DENDRO_PATH}/include/test)
target_include_directories(dendro5 PUBLIC ${DENDRO_PATH}/examples/include)
target_include_directories(dendro5 PUBLIC ${DENDRO_PATH}/FEM/include)
target_include_directories(dendro5 PUBLIC ${DENDRO_PATH}/FEM/examples/include)
target_include_directories(dendro5 PUBLIC ${DENDRO_PATH}/ODE/include)
target_include_directories(dendro5 PUBLIC ${DENDRO_PATH}/LinAlg/include)
target_include_directories(dendro5 PUBLIC ${DENDRO_PATH}/IO/vtk/include)
target_include_directories(dendro5 PUBLIC ${DENDRO_PATH}/IO/zlib/inc)
target_include_directories(dendro5 PUBLIC ${DENDRO_PATH}/IO/include)
target_include_directories(dendro5 PUBLIC ${MPI_INCLUDE_PATH})
target_include_directories(dendro5 PUBLIC ${GSL_INCLUDE_DIRS})
if(WITH_CUDA)
    target_include_directories(dendro5 PUBLIC ${CUDA_INCLUDE_DIRS})
endif()

set(INC include/parameters.h
        include/rk4nlsm.h
        include/nlsmUtils.h
        include/rhs.h
        include/derivs.h
        include/profile_params.h
        )

set(SRC src/rk4nlsm.cpp
        src/parameters.cpp
        src/nlsmUtils.cpp
        src/rhs.cpp
        src/derivs.cpp
        src/profile_params.cpp
        )

set(SOURCE_FILES src/nlsm.cpp  include/nlsm.h ${INC} ${SRC})
add_executable(${APP_NAME}Solver ${SOURCE_FILES})
target_include_directories(${APP_NAME}Solver PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/include)
target_include_directories(${APP_NAME}Solver PRIVATE ${DENDRO_PATH}/include)
target_include_directories(${APP_NAME}Solver PRIVATE ${DENDRO_PATH}/include/test)
target_include_directories(${APP_NAME}Solver PRIVATE ${DENDRO_PATH}/examples/include)
target_include_directories(${APP_NAME}Solver PRIVATE ${DENDRO_PATH}/FEM/include)
target_include_directories(${APP_NAME}Solver PRIVATE ${DENDRO_PATH}/ODE/include)
target_include_directories(${APP_NAME}Solver PRIVATE ${DENDRO_PATH}/LinAlg/include)
target_include_directories(${APP_NAME}Solver PRIVATE ${DENDRO_PATH}/IO/vtk/include)
target_include_directories(${APP_NAME}Solver PRIVATE ${DENDRO_PATH}/IO/zlib/inc)
target_include_directories(${APP_NAME}Solver PRIVATE ${MPI_INCLUDE_PATH})
target_include_directories(${APP_NAME}Solver PRIVATE ${GSL_INCLUDE_DIRS})
if(WITH_CUDA)
    target_include_directories(${APP_NAME}Solver PRIVATE ${CUDA_INCLUDE_DIRS})
endif()

target_link_libraries(${APP_NAME}Solver dendro5 ${LAPACK_LIBRARIES} ${MPI_LIBRARIES} m)
