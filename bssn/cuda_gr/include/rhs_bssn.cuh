// generated by Dendro-GR SymPyGR code gernation framework
//date: 2018-09-22 11:39:22
#ifndef BSSN_RHS_COMP_CUDA 
#define BSSN_RHS_COMP_CUDA 
#include<iostream>
#include"cuda_runtime.h"
#include<device_launch_parameters.h>
#include "block_cu.h"
#include "params_cu.h"
#include "bssn_rhs_deriv_mem_cuda.h"
#include "cudaUtils.cuh"
#include "derivs.cuh"
#include "derivs_bssn.cuh"
#include "cudaUtils.h"
namespace cuda {

/** computes rhs a_rhs*/
__global__ void __compute_a_rhs(double** __unzipOutVar, const double**__unzipInVar, MemoryDerivs* __derivWorkspace, const cuda::_Block* __dendroBlkList, const BSSNComputeParams* __bssnPar, const cudaDeviceProp*__deviceProperties);
/** computes rhs b_rhs*/
__global__ void __compute_b_rhs(double** __unzipOutVar, const double**__unzipInVar, MemoryDerivs* __derivWorkspace, const cuda::_Block* __dendroBlkList, const BSSNComputeParams* __bssnPar, const cudaDeviceProp*__deviceProperties);
/** computes rhs gt_rhs*/
__global__ void __compute_gt_rhs(double** __unzipOutVar, const double**__unzipInVar, MemoryDerivs* __derivWorkspace, const cuda::_Block* __dendroBlkList, const BSSNComputeParams* __bssnPar, const cudaDeviceProp*__deviceProperties);
/** computes rhs chi_rhs*/
__global__ void __compute_chi_rhs(double** __unzipOutVar, const double**__unzipInVar, MemoryDerivs* __derivWorkspace, const cuda::_Block* __dendroBlkList, const BSSNComputeParams* __bssnPar, const cudaDeviceProp*__deviceProperties);
/** computes rhs At_rhs*/
__global__ void __compute_At_rhs(double** __unzipOutVar, const double**__unzipInVar, MemoryDerivs* __derivWorkspace, const cuda::_Block* __dendroBlkList, const BSSNComputeParams* __bssnPar, const cudaDeviceProp*__deviceProperties);
/** computes rhs K_rhs*/
__global__ void __compute_K_rhs(double** __unzipOutVar, const double**__unzipInVar, MemoryDerivs* __derivWorkspace, const cuda::_Block* __dendroBlkList, const BSSNComputeParams* __bssnPar, const cudaDeviceProp*__deviceProperties);
/** computes rhs Gt_rhs*/
__global__ void __compute_Gt_rhs(double** __unzipOutVar, const double**__unzipInVar, MemoryDerivs* __derivWorkspace, const cuda::_Block* __dendroBlkList, const BSSNComputeParams* __bssnPar, const cudaDeviceProp*__deviceProperties);
/** computes rhs B_rhs*/
__global__ void __compute_B_rhs(double** __unzipOutVar, const double**__unzipInVar, MemoryDerivs* __derivWorkspace, const cuda::_Block* __dendroBlkList, const BSSNComputeParams* __bssnPar, const cudaDeviceProp*__deviceProperties);
}// end of namespace cuda


#endif
